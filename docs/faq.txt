==========================
Frequently Asked Questions
==========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Common Extension Installation Errors
------------------------------------

PHP Headers Not Found
~~~~~~~~~~~~~~~~~~~~~

For example:

.. code-block:: none

   /private/tmp/pear/install/mongodb/php_phongo.c:24:10: fatal error: 'php.h' file not found

   #include <php.h>
            ^~~~~~~

This error indicates that PHP's build system cannot find the necessary headers.
All PHP extensions require headers in order to compile. Additionally, those
headers must correspond to the PHP runtime for which the extension will be used.
Generally, the ``phpize`` command (invoked by ``pecl``) will ensure that the
extension builds with the correct headers.

Note that the mere presence of a PHP runtime does not mean that headers are
available. On various Linux distributions, headers are often published under a
separate ``php-dev`` or ``php-devel`` package. On macOS, the default PHP runtime
does not include headers and users typically need to install PHP (and headers)
via `Homebrew <https://brew.sh/>`_ in order to build an extension.

Multiple PHP Runtimes Installed
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If your system has multiple versions of PHP installed, each version will have
its own ``pecl`` and ``phpize`` commands. Additionally, each PHP runtime may
have separate ``php.ini`` files for each SAPI (e.g. FPM, CLI). If the extension
has been installed but is not available at runtime, double-check that you have
used the correct ``pecl`` command and have modified the appropriate ``php.ini``
file(s).

If there is any doubt about the ``php.ini`` file being used by a PHP runtime,
you should examine the output of :php:`phpinfo() <phpinfo>` for that particular
SAPI. Additionally, :php:`php_ini_loaded_file() <php_ini_loaded_file>` and
:php:`php_ini_scanned_files() <php_ini_scanned_files>` may be used to determine
exactly which INI files have been loaded by PHP.

Loading an Incompatible DLL on Windows
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

PECL builds Windows binaries for various combinations of PHP version,
thread-safety (TS or NTS), and architecture (x86 or x64). Failure to select the
correct binary will result in an error when attempting to load the extension DLL
at runtime:

.. code-block:: none

   PHP Warning:  PHP Startup: Unable to load dynamic library 'mongodb'

Ensure that you have downloaded a DLL that corresponds to the following PHP
runtime properties:

- PHP version (``PHP_VERSION``)
- Thread-safety (``PHP_ZTS``)
- Architecture (``PHP_INT_SIZE``)

In addition to the aforementioned constants, these properties can also be
inferred from :php:`phpinfo() <phpinfo>`. If your system has multiple PHP
runtimes installed, double-check that you are examining the ``phpinfo()`` output
for the correct environment.
