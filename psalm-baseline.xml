<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.9.0@8b9ad1eb9e8b7d3101f949291da2b9f7767cd163">
  <file src="examples/typemap.php">
    <PropertyNotSetInConstructor>
      <code>$address</code>
      <code>$emails</code>
      <code>$id</code>
      <code>$name</code>
      <code>$type</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/ChangeStream.php">
    <MissingTemplateParam>
      <code>Iterator</code>
    </MissingTemplateParam>
  </file>
  <file src="src/Client.php">
    <MixedArgument>
      <code>$driverOptions['driver'] ?? []</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$mergedDriver['platform']</code>
    </MixedAssignment>
  </file>
  <file src="src/Command/ListCollections.php">
    <MixedAssignment>
      <code>$cmd[$option]</code>
      <code>$options['session']</code>
    </MixedAssignment>
  </file>
  <file src="src/Command/ListDatabases.php">
    <MixedAssignment>
      <code>$cmd[$option]</code>
      <code>$options['session']</code>
    </MixedAssignment>
  </file>
  <file src="src/Exception/BadMethodCallException.php">
    <UnsafeInstantiation>
      <code>new static(sprintf('%s is immutable', $class))</code>
      <code>new static(sprintf('%s should not be called for an unacknowledged write result', $method))</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Exception/InvalidArgumentException.php">
    <UnsafeInstantiation>
      <code><![CDATA[new static(sprintf('Expected %s to have type "%s" but found "%s"', $name, $expectedType, get_debug_type($value)))]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Exception/ResumeTokenException.php">
    <UnsafeInstantiation>
      <code>new static('Resume token not found in change document')</code>
      <code><![CDATA[new static(sprintf('Expected resume token to have type "array or object" but found "%s"', get_debug_type($value)))]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Exception/UnsupportedException.php">
    <UnsafeInstantiation>
      <code>new static('Array filters are not supported by the server executing this operation')</code>
      <code>new static('Collations are not supported by the server executing this operation')</code>
      <code>new static('Explain is not supported by the server executing this operation')</code>
      <code>new static('Hint is not supported by the server executing this operation')</code>
      <code>new static('Read concern is not supported by the server executing this command')</code>
      <code><![CDATA[new static('The "allowDiskUse" option is not supported by the server executing this operation')]]></code>
      <code><![CDATA[new static('The "commitQuorum" option is not supported by the server executing this operation')]]></code>
      <code><![CDATA[new static('The "readConcern" option cannot be specified within a transaction. Instead, specify it when starting the transaction.')]]></code>
      <code><![CDATA[new static('The "writeConcern" option cannot be specified within a transaction. Instead, specify it when starting the transaction.')]]></code>
      <code>new static('Write concern is not supported by the server executing this command')</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/GridFS/Bucket.php">
    <DocblockTypeContradiction>
      <code>! is_resource($destination)</code>
      <code>! is_resource($destination)</code>
      <code>! is_resource($source)</code>
      <code>! is_resource($stream)</code>
    </DocblockTypeContradiction>
    <MissingReturnType>
      <code>delete</code>
      <code>downloadToStream</code>
      <code>downloadToStreamByName</code>
      <code>drop</code>
      <code>rename</code>
    </MissingReturnType>
    <MixedArgument>
      <code>$options['revision']</code>
      <code>$options['revision']</code>
    </MixedArgument>
  </file>
  <file src="src/GridFS/Exception/CorruptFileException.php">
    <UnsafeInstantiation>
      <code><![CDATA[new static(sprintf('Chunk not found for index "%d"', $expectedIndex))]]></code>
      <code><![CDATA[new static(sprintf('Expected chunk to have index "%d" but found "%d"', $expectedIndex, $index))]]></code>
      <code><![CDATA[new static(sprintf('Expected chunk to have size "%d" but found "%d"', $expectedSize, $size))]]></code>
      <code><![CDATA[new static(sprintf('Invalid data found for index "%d"', $chunkIndex))]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/GridFS/Exception/FileNotFoundException.php">
    <UnsafeInstantiation>
      <code><![CDATA[new static(sprintf('File "%s" not found in "%s"', $json, $namespace))]]></code>
      <code><![CDATA[new static(sprintf('File with name "%s" and revision "%d" not found in "%s"', $filename, $revision, $namespace))]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/GridFS/Exception/StreamException.php">
    <UnsafeInstantiation>
      <code><![CDATA[new static(sprintf('Downloading file from "%s" to "%s" failed. GridFS filename: "%s"', $sourceMetadata['uri'], $destinationMetadata['uri'], $filename))]]></code>
      <code><![CDATA[new static(sprintf('Downloading file from "%s" to "%s" failed. GridFS identifier: "%s"', $sourceMetadata['uri'], $destinationMetadata['uri'], $idString))]]></code>
      <code><![CDATA[new static(sprintf('Uploading file from "%s" to "%s" failed. GridFS filename: "%s"', $sourceMetadata['uri'], $destinationUri, $filename))]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/GridFS/ReadableStream.php">
    <MixedArgument>
      <code><![CDATA[$currentChunk->n]]></code>
      <code><![CDATA[$this->file->length]]></code>
    </MixedArgument>
  </file>
  <file src="src/GridFS/StreamWrapper.php">
    <MixedArgument>
      <code><![CDATA[$context[$this->protocol]['collectionWrapper']]]></code>
      <code><![CDATA[$context[$this->protocol]['collectionWrapper']]]></code>
      <code><![CDATA[$context[$this->protocol]['file']]]></code>
      <code><![CDATA[$context[$this->protocol]['filename']]]></code>
      <code><![CDATA[$context[$this->protocol]['options']]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$context[$this->protocol]['collectionWrapper']]]></code>
      <code><![CDATA[$context[$this->protocol]['collectionWrapper']]]></code>
      <code><![CDATA[$context[$this->protocol]['file']]]></code>
      <code><![CDATA[$context[$this->protocol]['filename']]]></code>
      <code><![CDATA[$context[$this->protocol]['options']]]></code>
    </MixedArrayAccess>
  </file>
  <file src="src/MapReduceResult.php">
    <MissingTemplateParam>
      <code>IteratorAggregate</code>
    </MissingTemplateParam>
    <MixedInferredReturnType>
      <code>Traversable</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[call_user_func($this->getIterator)]]></code>
    </MixedReturnStatement>
  </file>
  <file src="src/Model/BSONArray.php">
    <MissingTemplateParam>
      <code>BSONArray</code>
    </MissingTemplateParam>
    <MixedArrayOffset>
      <code>$this[$key]</code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$key</code>
      <code>$this[$key]</code>
      <code>$value</code>
    </MixedAssignment>
    <UnsafeInstantiation>
      <code>new static()</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Model/BSONDocument.php">
    <ArgumentTypeCoercion>
      <code>$iteratorClass</code>
    </ArgumentTypeCoercion>
    <MissingTemplateParam>
      <code>BSONDocument</code>
    </MissingTemplateParam>
    <MixedArrayOffset>
      <code>$this[$key]</code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$key</code>
      <code>$this[$key]</code>
      <code>$value</code>
    </MixedAssignment>
    <UnsafeInstantiation>
      <code>new static()</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Model/BSONIterator.php">
    <MissingTemplateParam>
      <code>Iterator</code>
    </MissingTemplateParam>
    <MixedArgument>
      <code>$documentLength</code>
      <code>$documentLength</code>
      <code><![CDATA[$this->options['typeMap']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$this->position]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code>$documentLength</code>
    </MixedOperand>
  </file>
  <file src="src/Model/CachingIterator.php">
    <MissingTemplateParam>
      <code>Iterator</code>
    </MissingTemplateParam>
    <MixedArrayAccess>
      <code>$currentItem[self::FIELD_KEY]</code>
      <code>$currentItem[self::FIELD_VALUE]</code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$currentItem</code>
      <code>$currentItem</code>
    </MixedAssignment>
  </file>
  <file src="src/Model/CallbackIterator.php">
    <MissingTemplateParam>
      <code>Iterator</code>
    </MissingTemplateParam>
  </file>
  <file src="src/Model/ChangeStreamIterator.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($document) && ! is_object($document)]]></code>
      <code><![CDATA[isset($initialResumeToken) && ! is_array($initialResumeToken) && ! is_object($initialResumeToken)]]></code>
    </DocblockTypeContradiction>
    <MissingTemplateParam>
      <code>ChangeStreamIterator</code>
    </MissingTemplateParam>
    <MixedArgument>
      <code><![CDATA[$reply->cursor->nextBatch]]></code>
      <code><![CDATA[$this->current()]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$this->postBatchResumeToken]]></code>
    </MixedAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$reply->cursor->nextBatch]]></code>
      <code><![CDATA[$reply->cursor->postBatchResumeToken]]></code>
    </MixedPropertyFetch>
  </file>
  <file src="src/Model/CollectionInfo.php">
    <MissingTemplateParam>
      <code>ArrayAccess</code>
    </MissingTemplateParam>
    <MixedArgument>
      <code>$key</code>
    </MixedArgument>
    <MixedArrayOffset>
      <code><![CDATA[$this->info[$key]]]></code>
    </MixedArrayOffset>
  </file>
  <file src="src/Model/CollectionInfoCommandIterator.php">
    <MissingTemplateParam>
      <code>CollectionInfoCommandIterator</code>
    </MissingTemplateParam>
    <MixedArgument>
      <code>$info</code>
    </MixedArgument>
    <MixedArrayAssignment>
      <code>$info['idIndex']['ns']</code>
    </MixedArrayAssignment>
    <MixedAssignment>
      <code>$info</code>
    </MixedAssignment>
    <MixedOperand>
      <code>$info['name']</code>
    </MixedOperand>
  </file>
  <file src="src/Model/CollectionInfoIterator.php">
    <MissingTemplateParam>
      <code>Iterator</code>
    </MissingTemplateParam>
  </file>
  <file src="src/Model/DatabaseInfo.php">
    <MissingTemplateParam>
      <code>ArrayAccess</code>
    </MissingTemplateParam>
    <MixedArgument>
      <code>$key</code>
    </MixedArgument>
    <MixedArrayOffset>
      <code><![CDATA[$this->info[$key]]]></code>
    </MixedArrayOffset>
  </file>
  <file src="src/Model/DatabaseInfoIterator.php">
    <MissingTemplateParam>
      <code>Iterator</code>
    </MissingTemplateParam>
  </file>
  <file src="src/Model/DatabaseInfoLegacyIterator.php">
    <MixedArgument>
      <code><![CDATA[current($this->databases)]]></code>
    </MixedArgument>
    <MixedReturnTypeCoercion>
      <code>int</code>
      <code><![CDATA[key($this->databases)]]></code>
    </MixedReturnTypeCoercion>
  </file>
  <file src="src/Model/IndexInfo.php">
    <MissingTemplateParam>
      <code>ArrayAccess</code>
    </MissingTemplateParam>
    <MixedArgument>
      <code>$key</code>
    </MixedArgument>
    <MixedArrayOffset>
      <code><![CDATA[$this->info[$key]]]></code>
    </MixedArrayOffset>
  </file>
  <file src="src/Model/IndexInfoIterator.php">
    <MissingTemplateParam>
      <code>Iterator</code>
    </MissingTemplateParam>
  </file>
  <file src="src/Model/IndexInfoIteratorIterator.php">
    <MissingTemplateParam>
      <code>IndexInfoIteratorIterator</code>
    </MissingTemplateParam>
    <MixedArgument>
      <code>$info</code>
      <code>$info</code>
    </MixedArgument>
    <MixedArrayAssignment>
      <code>$info['ns']</code>
    </MixedArrayAssignment>
    <MixedAssignment>
      <code>$info</code>
    </MixedAssignment>
  </file>
  <file src="src/Model/IndexInput.php">
    <MixedArgument>
      <code>$fieldName</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$fieldName</code>
    </MixedAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$this->index['name']]]></code>
    </MixedReturnStatement>
  </file>
  <file src="src/Operation/Aggregate.php">
    <MixedArgument>
      <code><![CDATA[$this->options['typeMap']]]></code>
      <code><![CDATA[$this->options['typeMap']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$cmdOptions['maxAwaitTimeMS']</code>
      <code>$cmd[$option]</code>
      <code>$cmd['hint']</code>
      <code>$options[$option]</code>
      <code>$options['writeConcern']</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>isInTransaction</code>
    </MixedMethodCall>
  </file>
  <file src="src/Operation/BulkWrite.php">
    <DocblockTypeContradiction>
      <code>is_array($operation)</code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code>$args</code>
      <code>$args</code>
      <code>$args</code>
      <code>$args[0]</code>
      <code>$args[0]</code>
      <code>$args[0]</code>
      <code>$args[1]</code>
      <code>$args[1]</code>
      <code>$args[1]</code>
      <code>$args[1]</code>
      <code>$args[2]</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code>$args[0]</code>
      <code>$args[0]</code>
      <code>$args[0]</code>
      <code>$args[0]</code>
      <code>$args[1]</code>
      <code>$args[1]</code>
      <code>$args[1]</code>
      <code>$args[1]</code>
      <code>$args[1]</code>
      <code>$args[1]</code>
      <code>$args[1]</code>
      <code>$args[1]</code>
      <code>$args[1]</code>
      <code>$args[1]</code>
      <code>$args[2]</code>
      <code>$args[2]</code>
      <code>$args[2]</code>
      <code>$args[2]</code>
      <code>$args[2]</code>
      <code>$args[2]</code>
      <code>$args[2]</code>
      <code>$args[2]['upsert']</code>
      <code>$args[2]['upsert']</code>
      <code>$args[2]['upsert']</code>
      <code>$args[2]['upsert']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment>
      <code>$args[1]</code>
      <code>$args[1]</code>
      <code>$args[1]['limit']</code>
      <code>$args[2]</code>
      <code>$args[2]</code>
      <code>$args[2]</code>
      <code>$args[2]</code>
      <code>$args[2]</code>
      <code>$args[2]</code>
      <code>$args[2]['multi']</code>
      <code>$args[2]['multi']</code>
      <code>$operations[$i][$type][1]</code>
      <code>$operations[$i][$type][2]</code>
      <code>$operations[$i][$type][2]</code>
    </MixedArrayAssignment>
    <MixedAssignment>
      <code>$args</code>
      <code>$args</code>
      <code>$args[2]</code>
      <code>$args[2]</code>
      <code>$insertedIds[$i]</code>
      <code>$operations[$i][$type][1]</code>
      <code>$operations[$i][$type][2]</code>
      <code>$operations[$i][$type][2]</code>
      <code>$options[$option]</code>
      <code>$options['session']</code>
      <code>$options['writeConcern']</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>isInTransaction</code>
    </MixedMethodCall>
    <MixedOperand>
      <code>$args[2]</code>
      <code>$args[2]</code>
    </MixedOperand>
  </file>
  <file src="src/Operation/Count.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($filter) && ! is_object($filter)]]></code>
    </DocblockTypeContradiction>
    <MixedAssignment>
      <code>$cmd[$option]</code>
      <code>$cmd['hint']</code>
      <code>$options['readConcern']</code>
      <code>$options['readPreference']</code>
      <code>$options['session']</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>isInTransaction</code>
    </MixedMethodCall>
  </file>
  <file src="src/Operation/CountDocuments.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($filter) && ! is_object($filter)]]></code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Operation/CreateCollection.php">
    <MixedArgument>
      <code><![CDATA[$this->options['typeMap']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$cmd[$option]</code>
      <code>$options['session']</code>
      <code>$options['writeConcern']</code>
    </MixedAssignment>
  </file>
  <file src="src/Operation/CreateEncryptedCollection.php">
    <DocblockTypeContradiction>
      <code>! is_array($encryptedFields['fields'])</code>
      <code><![CDATA[! is_array($field) && ! is_object($field)]]></code>
      <code>! isset($encryptedFields['fields']) || ! is_array($encryptedFields['fields'])</code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Operation/CreateIndexes.php">
    <DocblockTypeContradiction>
      <code>is_array($index)</code>
    </DocblockTypeContradiction>
    <MixedAssignment>
      <code>$cmd[$option]</code>
      <code>$cmd['commitQuorum']</code>
      <code>$options['session']</code>
      <code>$options['writeConcern']</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>isInTransaction</code>
    </MixedMethodCall>
  </file>
  <file src="src/Operation/DatabaseCommand.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($command) && ! is_object($command)]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$this->options['typeMap']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$options['readPreference']</code>
      <code>$options['session']</code>
    </MixedAssignment>
  </file>
  <file src="src/Operation/Delete.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($filter) && ! is_object($filter)]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$this->options['writeConcern']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$cmd['writeConcern']</code>
      <code>$deleteOptions['hint']</code>
      <code>$options['comment']</code>
      <code>$options['session']</code>
      <code>$options['writeConcern']</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>isInTransaction</code>
    </MixedMethodCall>
  </file>
  <file src="src/Operation/Distinct.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($filter) && ! is_object($filter)]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$this->options['typeMap']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$cmd[$option]</code>
      <code>$options['readConcern']</code>
      <code>$options['readPreference']</code>
      <code>$options['session']</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>isInTransaction</code>
    </MixedMethodCall>
  </file>
  <file src="src/Operation/DropCollection.php">
    <MixedArgument>
      <code><![CDATA[$this->options['typeMap']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$cmd['comment']</code>
      <code>$options['session']</code>
      <code>$options['writeConcern']</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>isInTransaction</code>
    </MixedMethodCall>
  </file>
  <file src="src/Operation/DropDatabase.php">
    <MixedArgument>
      <code><![CDATA[$this->options['typeMap']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$cmd['comment']</code>
      <code>$options['session']</code>
      <code>$options['writeConcern']</code>
    </MixedAssignment>
  </file>
  <file src="src/Operation/DropIndexes.php">
    <MixedArgument>
      <code><![CDATA[$this->options['typeMap']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$cmd[$option]</code>
      <code>$options['session']</code>
      <code>$options['writeConcern']</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>isInTransaction</code>
    </MixedMethodCall>
  </file>
  <file src="src/Operation/Explain.php">
    <MixedArgument>
      <code><![CDATA[$this->options['typeMap']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$cmd[$option]</code>
      <code>$options['readPreference']</code>
      <code>$options['session']</code>
    </MixedAssignment>
  </file>
  <file src="src/Operation/Find.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($filter) && ! is_object($filter)]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$this->options['typeMap']]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code>$options['modifiers'][$modifier[1]]</code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$options[$modifier[0]]</code>
      <code>$options[$option]</code>
      <code>$options['readPreference']</code>
      <code>$options['session']</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>isInTransaction</code>
    </MixedMethodCall>
  </file>
  <file src="src/Operation/FindAndModify.php">
    <MixedArgument>
      <code><![CDATA[$this->options['typeMap']]]></code>
      <code><![CDATA[$this->options['writeConcern']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$cmd[$option]</code>
      <code>$cmd['new']</code>
      <code>$cmd['update']</code>
      <code>$cmd['upsert']</code>
      <code>$options['session']</code>
      <code>$options['writeConcern']</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>array|object|null</code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code>isInTransaction</code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[is_object($result) ? ($result->value ?? null) : null]]></code>
      <code><![CDATA[is_object($result) ? ($result->value ?? null) : null]]></code>
    </MixedReturnStatement>
  </file>
  <file src="src/Operation/FindOneAndDelete.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($filter) && ! is_object($filter)]]></code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Operation/FindOneAndReplace.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($filter) && ! is_object($filter)]]></code>
      <code><![CDATA[! is_array($replacement) && ! is_object($replacement)]]></code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Operation/FindOneAndUpdate.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($filter) && ! is_object($filter)]]></code>
      <code><![CDATA[! is_array($update) && ! is_object($update)]]></code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Operation/InsertMany.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($document) && ! is_object($document)]]></code>
    </DocblockTypeContradiction>
    <MixedAssignment>
      <code>$insertedIds[$i]</code>
      <code>$options[$option]</code>
      <code>$options['session']</code>
      <code>$options['writeConcern']</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>isInTransaction</code>
    </MixedMethodCall>
  </file>
  <file src="src/Operation/InsertOne.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($document) && ! is_object($document)]]></code>
    </DocblockTypeContradiction>
    <MixedAssignment>
      <code>$insertedId</code>
      <code>$options[$option]</code>
      <code>$options['session']</code>
      <code>$options['writeConcern']</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>isInTransaction</code>
    </MixedMethodCall>
  </file>
  <file src="src/Operation/ListCollectionNames.php">
    <MissingClosureReturnType>
      <code>function (array $collectionInfo) {</code>
    </MissingClosureReturnType>
  </file>
  <file src="src/Operation/ListIndexes.php">
    <MixedAssignment>
      <code>$cmd[$option]</code>
      <code>$options['session']</code>
    </MixedAssignment>
  </file>
  <file src="src/Operation/MapReduce.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_string($out) && ! is_array($out) && ! is_object($out)]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$result->result->collection]]></code>
      <code><![CDATA[$result->result->db]]></code>
      <code><![CDATA[$this->options['typeMap']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$cmd[$option]</code>
      <code>$options['readConcern']</code>
      <code>$options['readPreference']</code>
      <code>$options['session']</code>
      <code>$options['writeConcern']</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>isInTransaction</code>
    </MixedMethodCall>
  </file>
  <file src="src/Operation/ModifyCollection.php">
    <MixedArgument>
      <code><![CDATA[$this->options['typeMap']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$cmd['comment']</code>
      <code>$options['session']</code>
      <code>$options['writeConcern']</code>
    </MixedAssignment>
  </file>
  <file src="src/Operation/RenameCollection.php">
    <MixedArgument>
      <code><![CDATA[$this->options['typeMap']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$cmd[$option]</code>
      <code>$options['session']</code>
      <code>$options['writeConcern']</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>isInTransaction</code>
    </MixedMethodCall>
  </file>
  <file src="src/Operation/ReplaceOne.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($replacement) && ! is_object($replacement)]]></code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Operation/Update.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($filter) && ! is_object($filter)]]></code>
      <code><![CDATA[! is_array($update) && ! is_object($update)]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$this->options['writeConcern']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$cmd['bypassDocumentValidation']</code>
      <code>$cmd['writeConcern']</code>
      <code>$options[$option]</code>
      <code>$options['session']</code>
      <code>$options['writeConcern']</code>
      <code>$updateOptions[$option]</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>isInTransaction</code>
    </MixedMethodCall>
  </file>
  <file src="src/Operation/UpdateMany.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($update) && ! is_object($update)]]></code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Operation/UpdateOne.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($update) && ! is_object($update)]]></code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Operation/Watch.php">
    <DocblockTypeContradiction>
      <code><![CDATA[isset($resumeToken) && ! is_array($resumeToken) && ! is_object($resumeToken)]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$reply->cursor->firstBatch]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$this->postBatchResumeToken]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>array|object|null</code>
    </MixedInferredReturnType>
    <MixedPropertyFetch>
      <code><![CDATA[$reply->cursor->firstBatch]]></code>
      <code><![CDATA[$reply->cursor->postBatchResumeToken]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[$this->changeStreamOptions['resumeAfter']]]></code>
      <code><![CDATA[$this->changeStreamOptions['startAfter']]]></code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor>
      <code>$firstBatchSize</code>
      <code>$operationTime</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$resumeToken === null && $this->operationTime !== null]]></code>
      <code><![CDATA[$this->operationTime !== null]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/UpdateResult.php">
    <MixedAssignment>
      <code>$id</code>
    </MixedAssignment>
  </file>
  <file src="src/functions.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($document) && ! is_object($document)]]></code>
      <code>is_array($document)</code>
      <code>is_array($document)</code>
      <code>is_array($out)</code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code>$wireVersionForWriteStageOnSecondary</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$manager->getServers()]]></code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code>$collectionInfo['options']['encryptedFields']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment>
      <code>$typeMap['fieldPaths'][$fieldPath]</code>
      <code>$typeMap['fieldPaths'][substr($fieldPath, 0, -2)]</code>
    </MixedArrayAssignment>
    <MixedAssignment>
      <code>$element[$key]</code>
      <code>$lastOp</code>
      <code>$type</code>
      <code>$type</code>
      <code>$typeMap['fieldPaths'][$fieldPath . '.' . $existingFieldPath]</code>
      <code>$typeMap['fieldPaths'][$fieldPath]</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>array|object</code>
      <code>array|object|null</code>
      <code>array|object|null</code>
    </MixedInferredReturnType>
    <MixedOperand>
      <code>$type</code>
    </MixedOperand>
    <MixedReturnStatement>
      <code>$collectionInfo['options']['encryptedFields'] ?? null</code>
      <code>$collectionInfo['options']['encryptedFields'] ?? null</code>
      <code>$encryptedFieldsMap[$databaseName . '.' . $collectionName] ?? null</code>
      <code>$encryptedFieldsMap[$databaseName . '.' . $collectionName] ?? null</code>
      <code>toPHP(fromPHP($document), $typeMap)</code>
    </MixedReturnStatement>
  </file>
</files>
